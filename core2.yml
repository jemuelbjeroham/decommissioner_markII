  - name: ‚è©‚è© FETCHING UPDATED LIST OF SECURITY POLICIES FROM FIREWALLS üìÉ
    panos_security_rule_facts:
       provider: '{{ provider }}'
       all_details: yes
    register: secrules1
    

  - name: ‚è©‚è© FETCHING THE LIST OF ADDRESS GROUPS AGAIN üìÉ
    panos_object_facts:
       provider: '{{ provider }}'
       object_type: 'address-group'
       name_regex: '.*'
    register: addrgrps2
    

  - name: ‚è©‚è© REMOVING EMPTY ADDRESS GROUPS FROM ADDRESS GROUPS ‚ö°
    panos_address_group:
       provider: '{{ provider }}'
       name: '{{ item.name }}'
       description: '{{ item.description | default(omit, true) }}'
       static_value: '{{ item.static_value | difference([emtag.name]) }}'
       commit: false
    loop: '{{ addrgrps2.objects }}'
    loop_control:
       label: '{{ item.name }}'
    when:
       - emtag.name in item.static_value
       

  - name: ‚è©‚è© REMOVING EMPTY ADDRESS GROUPS FROM SECURITY RULES ‚ö°
    panos_security_rule:
       provider: '{{ provider }}'
       rule_name: '{{ item.rule_name }}'
       source_ip: '{{ item.source_ip | difference([emtag.name]) }}'
       destination_ip: '{{ item.destination_ip | difference([emtag.name]) }}'
    loop: '{{ secrules1.rule_details }}'
    loop_control:
       label: '{{ item.rule_name }}'
    when:
       - (emtag.name in item.source_ip) or (emtag.name in item.destination_ip)
       

  - name: ‚è©‚è© REMOVING EMPTY ADDRESS GROUPS ‚ö°
    panos_address_group:
       provider: '{{ provider }}'
       name: '{{ emtag.name }}'
       state: 'absent'
    loop: '{{ addrgrps1.objects }}'
    loop_control:
       label: '{{ emtag.name }}'
    when:
      - emtag.static_value == []
      

  - debug:
      msg: "The cleanup of '{{ emtag.name }}' has been completed"

  - name: ‚è©‚è© FETCHING THE UPDATED LIST OF ADDRESS GROUPS AGAIN TO CHECK FOR ANY EMPTY ADDRESS GROUPS ‚ö°
    panos_object_facts:
       provider: '{{ provider }}'
       object_type: 'address-group'
       name_regex: '.*'
    register: addrgrps1
    

  - include_tasks: core2.yml
    loop: '{{ addrgrps1.objects }}'
    loop_control:
       loop_var: emtag
    when:
      - emtag.static_value == []
      
